// prisma/schema.prisma
datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_DATABASE_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Contact {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  email     String?
  name      String?
  phone     String?
  avatarUrl String?
  language  String?
  timezone  String?
  tickets   Ticket[]
  messages  Message[]
}

model Ticket {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  content   String?
  contact   Contact   @relation(fields: [contactId], references: [id])
  contactId Int
  messages  Message[]
}

enum MessageDirection {
  Inbound
  Outbound
}

enum MessageContentType {
  TextPlain
  TextHtml
}

enum MessageStatus {
  Pending // Message is waiting in client for sending
  Sent // Message was sent to the cloud
  DeliveredToCloud // The cloud acknowledged the receipt of the message
  DeliveredToDevice // The message has been delivered to at least one client device
  Seen // The message was seen by the recipient
}

model Message {
  id          Int                @id @default(autoincrement())
  createdAt   DateTime           @default(now())
  status      MessageStatus
  contentType MessageContentType
  content     Json
  direction   MessageDirection
  sender      Contact            @relation(fields: [senderId], references: [id])
  senderId    Int
  ticket      Ticket             @relation(fields: [ticketId], references: [id])
  ticketId    Int
}
