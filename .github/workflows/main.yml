on:
  push:
    branches: [main]

jobs:
  build:
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: "yarn"

      - name: Install dependencies
        run: yarn

      - name: Execute unit tests
        run: yarn test

      - name: Setup environment variables
        run: |
          touch backend/.env
          echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> backend/.env
          echo DIRECT_DATABASE_URL="${{ secrets.DIRECT_DATABASE_URL }}" >> backend/.env
          echo CORS_ORIGIN=https://customer-service-defea.web.app >> backend/.env

      - name: Build backend
        run: yarn build:backend

      - name: Run Prisma Migrate
        run: |
          cd backend
          yarn db:generate
          yarn db:migrate deploy

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          token_format: access_token
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SA_EMAIL }}"

      - name: Login to Docker
        uses: "docker/login-action@v2"
        with:
          registry: "gcr.io"
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: Configure Docker
        run: |-
          echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://gcr.io

      - name: Build Docker image
        run: |
          cp yarn.lock backend/yarn.lock
          cd backend
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/customer-service:latest .

      - name: Push Docker image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/customer-service:latest

      - id: "deploy"
        name: Deploy to Cloud Run
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          image: "gcr.io/${{ secrets.GCP_PROJECT_ID }}/customer-service"
          service: "customer-service"
          region: "europe-west9"
          flags: "--max-instances=1 --allow-unauthenticated"

      - name: Setup environment variables
        run: |
          touch frontend/.env
          echo VITE_ENDPOINT_URL="${{ steps.deploy.outputs.url }}" >> frontend/.env

      - name: Build front-end
        run: yarn build:frontend

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_CUSTOMER_SERVICE_DEFEA }}"
          projectId: customer-service-defea
          channelId: live
